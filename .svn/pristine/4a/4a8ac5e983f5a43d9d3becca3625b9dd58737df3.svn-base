<template>
 <div>
    <ul class="Basic-ul">
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.NameAcitve }">姓名</div>
            <div class="Basicmsg-container">
                <input type="text" v-model="user.Name" placeholder="请在此处输入姓名"/>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">国籍</div>
            <div class="Basicmsgicon-container" @click="Get_userCountry">{{ContainerName}}</div>
         <!--    <div class="Basicmsgicon-right" @click="Get_userCountry">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">证件类型</div>
            <div class="Basicmsgicon-container" @click="User_SelectIdTypesk">{{user_IdTypeValue}}</div>
           <!--  <div class="Basicmsgicon-right" @click="User_SelectIdTypesk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.IDAcitve}">证件号码</div>
            <div class="Basicmsg-container">
                <input type="text" v-model="user.ID" maxlength="18" @blur="Get_UserIdTest" />
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">性别</div>
            <div class="Basicmsgicon-container" @click="User_Selectsexsk">{{SexValue}}</div>
           <!--  <div class="Basicmsgicon-right" @click="User_Selectsexsk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">民族</div>
            <div class="Basicmsgicon-container" @click="User_Selectracesk">{{User_Race}}</div>
             <!--  <div class="Basicmsgicon-right" @click="User_Selectracesk">
                  <span class="iconfont BasicIconbg" >&#xe603;</span>
              </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">籍贯</div>
            <div class="Basicmsg-container" @click="showPicker4">{{user.HomeTownPlace}}
              <span class="iconfont Basiciconfont-time">&#xe64c;</span>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.BornTimeAcitve}">出生日期</div>
            <div class="Basicmsg-container" @click="setDate">{{user.BornTime}}
             <span class="iconfont Basiciconfont-time">&#xe644;</span>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.jobsTimeAcitve}">参加工作时间</div>
            <div class="Basicmsg-container" @click="setDate2">
             {{user.jobsTime}}
             <span class="iconfont Basiciconfont-time">&#xe644;</span>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">政治面貌</div>
            <div class="Basicmsgicon-container" @click="User_SelectPoliticalsk">{{user_Political}}</div>
          <!--   <div class="Basicmsgicon-right" @click="User_SelectPoliticalsk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.HeightAcitve}">身高(CM)</div>
            <div class="Basicmsg-container">
                <input type="number" v-model="user.Height" placeholder="请在此处输入身高(应在140~200之间)" oninput="if(value.length>5)value=value.slice(0,5)" />
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">血型</div>
            <div class="Basicmsgicon-container" @click="User_SelectBloodsk">{{user_Blood}}</div>
          <!--   <div class="Basicmsgicon-right" @click="User_SelectBloodsk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">宗教信仰</div>
            <div class="Basicmsgicon-container" @click="User_SelectReligionsk">{{user_Religion}}</div>
          <!--   <div class="Basicmsgicon-right" @click="User_SelectReligionsk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">兴趣爱好</div>
            <div class="Basicmsg-container">
                <input type="text" v-model="user.savor" placeholder="请在此处输入爱好"/>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">个人特长</div>
            <div class="Basicmsg-container">
                <input type="text" v-model="user.Specialty" placeholder="请在此处输入特长"/>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">婚姻状况</div>
            <div class="Basicmsgicon-container" @click="User_SelectMarriagesk">{{user_Marriage}}</div>
          <!--   <div class="Basicmsgicon-right" @click="User_SelectMarriagesk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">户口性质</div>
            <div class="Basicmsgicon-container" @click="User_SelectAccountsk">{{user_Account}}</div>
           <!--  <div class="Basicmsgicon-right" @click="User_SelectAccountsk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">参保地</div>
            <div class="Basicmsg-container">
                <input type="text" v-model="user.Insured" placeholder="请在此处参保地址"/>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">原发薪周期</div>
            <div class="Basicmsgicon-container" @click="User_SelectWagesk">{{user_Wage}}</div>
        <!--     <div class="Basicmsgicon-right" @click="User_SelectWagesk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsgicon-left">是否独生子女</div>
            <div class="Basicmsgicon-container" @click="User_SelectChildsk">{{user_child}}</div>
          <!--   <div class="Basicmsgicon-right" @click="User_SelectChildsk">
                <span class="iconfont BasicIconbg" >&#xe603;</span>
            </div> -->
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">出生地点</div>
            <div class="Basicmsg-container" @click="showBornPicker5">{{user.Birthplace}}
              <span class="iconfont Basiciconfont-time">&#xe64c;</span>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">户籍住址</div>
            <div class="Basicmsg-container" @click="showAccountPicker6">{{user.Accountplace}}
              <span class="iconfont Basiciconfont-time">&#xe64c;</span>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.AccountplaceinputAcitve}">户籍详细地址</div>
            <div class="Basicmsg-container" >
                <input type="text" v-model="user.Accountplaceinput" placeholder="如道路、门牌号、小区、楼栋号、单元室等"/>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">家庭住址</div>
            <div class="Basicmsg-container" @click="showFamilyPicker7">{{user.FamilyPlace}}
              <span class="iconfont Basiciconfont-time">&#xe64c;</span>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.FamilyPlaceinputAcitve}">家庭详细地址</div>
            <div class="Basicmsg-container">
                <input type="text" v-model="user.FamilyPlaceinput" placeholder="如道路、门牌号、小区、楼栋号、单元室等"/>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left">现在住址</div>
            <div class="Basicmsg-container" @click="showNowPicker8">{{user.NowPlace}}
              <span class="iconfont Basiciconfont-time">&#xe64c;</span>
            </div>
        </li>
        <li class="Basic-li">
            <div class="Basicmsg-left" :class="{ color_error: user.NowPlaceinputAcitve}">现在详细地址</div>
            <div class="Basicmsg-container">
                <input type="text" v-model="user.NowPlaceinput" value="" placeholder="如道路、门牌号、小区、楼栋号、单元室等"/>
            </div>
        </li>
        <li class="Basic-li">
          <mt-button type="primary" size="large" @click="keep_usermsg">保存</mt-button>
        </li>
    </ul>
    <awesome-picker
      ref="picker4"
      :textTitle="picker4.textTitle"
      :data="picker4.data"
      :anchor="picker4.anchor"
      :colorConfirm="picker4.areaconbg"
      :colorCancel="picker4.areaconbg"
      @confirm="handlePicker4Confirm">
    </awesome-picker>
    <awesome-picker
      ref="picker5"
      :textTitle="picker5.textTitle"
      :data="picker5.data"
      :anchor="picker5.anchor"
      :colorConfirm="picker5.areaconbg"
      :colorCancel="picker5.areaconbg"
      @confirm="handlePicker5Confirm">
    </awesome-picker>
    <awesome-picker
      ref="picker6"
      :textTitle="picker6.textTitle"
      :data="picker6.data"
      :anchor="picker6.anchor"
      :colorConfirm="picker6.areaconbg"
      :colorCancel="picker6.areaconbg"
      @confirm="handlePicker6Confirm">
    </awesome-picker>
    <awesome-picker
      ref="picker7"
      :textTitle="picker7.textTitle"
      :data="picker7.data"
      :anchor="picker7.anchor"
      :colorConfirm="picker7.areaconbg"
      :colorCancel="picker7.areaconbg"
      @confirm="handlePicker7Confirm">
    </awesome-picker>
    <awesome-picker
      ref="picker8"
      :textTitle="picker8.textTitle"
      :data="picker8.data"
      :anchor="picker8.anchor"
      :colorConfirm="picker8.areaconbg"
      :colorCancel="picker8.areaconbg"
      @confirm="handlePicker8Confirm">
    </awesome-picker>
    <!--性别-->
    <mt-popup
          v-model="sexVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="sexslots" @change="onValuessexChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_Selectsexsk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectsexSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
    <!--证件类型-->
     <mt-popup
          v-model="IdTypeVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="IdTypeslots" @change="onValuesIdTypeChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectIdTypesk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectIdTypeSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
    <!--民族-->
    <mt-popup
          v-model="raceVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="raceslots" @change="onValuesraceChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_Selectracesk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectraceSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
    <!--政治面貌-->
    <mt-popup
          v-model="PoliticalVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="Politicalslots" @change="onValuesPoliticalChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectPoliticalsk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectPoliticalSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
    <!--血型-->
     <mt-popup
          v-model="BloodVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="Bloodslots" @change="onValuesBloodChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectBloodsk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectBloodSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
    <!--宗教信仰-->
    <mt-popup
          v-model="ReligionVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="Religionslots" @change="onValuesReligionChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectReligionsk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectReligionSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
    <!--婚姻状况-->
    <mt-popup
          v-model="MarriageVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="Marriageslots" @change="onValuesMarriageChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectMarriagesk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectMarriageSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
    <!--户口性质-->
    <mt-popup
          v-model="AccountVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="Accountslots" @change="onValuesAccountChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectAccountsk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectAccountSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
  <!--发薪周期-->
    <mt-popup
          v-model="WageVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="Wageslots" @change="onValuesWageChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectWagesk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectWageSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
  <!--独生子女-->
    <mt-popup
          v-model="ChildVisible"
          position="bottom"
          popup-transition="popup-fade">
            <mt-picker :slots="Childslots" @change="onValuesChildChange"  class="levelselect" showToolbar>
                 <div class="picker-toolbar-title">
                     <div class="usi-btn-cancel" @click="User_SelectChildsk">
                        取消
                     </div>
                     <div>
                     </div>
                     <div class="usi-btn-sure" @click="User_SelectChildSure">
                       确定
                     </div>
                  </div>
           </mt-picker>
    </mt-popup>
   <div class="overlayer" @touchmove.prevent v-show="Basic_opcatiybg">
   </div>
 </div>
</template>
<script>
import Vue from 'vue'
import areaData from '@/assets/js/area'
import AwesomePicker from 'vue-awesome-picker'
import { mapState } from 'vuex'
import global_ from '@/pages/Global/global'
import { MessageBox } from 'mint-ui'
Vue.use(AwesomePicker)

export default {
  name: 'MemberBasic',
  data () {
    return {
      user: {
        Name: '张大牛',
        NameAcitve: false,
        testID: null,
        ID: '11010119800101103X',
        IDAcitve: false,
        BornTime: '1970-01-01',
        BornTimeAcitve: false,
        jobsTime: '2018-01-01',
        jobsTimeAcitve: false,
        Height: '',
        HeightAcitve: false,
        savor: '',
        Specialty: '',
        Insured: '',
        HomeTownPlace: '北京市 北京市 东城区',
        Birthplace: '北京市 北京市 东城区',
        Accountplace: '北京市 北京市 东城区',
        Accountplaceinput: '',
        AccountplaceinputAcitve: false,
        FamilyPlace: '北京市 北京市 东城区',
        FamilyPlaceinput: '',
        FamilyPlaceinputAcitve: false,
        NowPlace: '北京市 北京市 东城区',
        NowPlaceinput: '',
        NowPlaceinputAcitve: false
      },
      SexValue: '男',
      sexVisible: false,
      SexValue_set: '',
      user_IdTypeValue: '身份证',
      IdTypeVisible: false,
      user_IdTypeValue_set: '',
      User_Race: '汉',
      raceVisible: false,
      User_Race_set: '',
      user_Political: '群众',
      PoliticalVisible: false,
      user_Political_set: '',
      user_Blood: 'O型',
      BloodVisible: false,
      user_Blood_set: '',
      user_Religion: '无宗教信仰',
      ReligionVisible: false,
      user_Religion_set: '',
      user_Marriage: '未婚',
      MarriageVisible: false,
      user_Marriage_set: '',
      user_Account: '农业',
      AccountVisible: false,
      user_Account_set: '',
      user_Wage: '当月发当月',
      WageVisible: false,
      user_Wage_set: '',
      user_child: '否',
      ChildVisible: false,
      user_child_set: '',
      msg: '../static/images/u236.png',
      Basic_opcatiybg: false,
      country_value: '中国',
      picker4: {
        anchor: [],
        textTitle: '',
        areaconbg: '#000',
        data: areaData
      },
      picker5: {
        anchor: [],
        textTitle: '',
        areaconbg: '#000',
        data: areaData
      },
      picker6: {
        anchor: [],
        textTitle: '',
        areaconbg: '#000',
        data: areaData
      },
      picker7: {
        anchor: [],
        textTitle: '',
        areaconbg: '#000',
        data: areaData
      },
      picker8: {
        anchor: [],
        textTitle: '',
        areaconbg: '#000',
        data: areaData
      },
      sexslots: [
        {
          flex: 1,
          values: ['男', '女'],
          textAlign: 'center'
        }
      ],
      IdTypeslots: [
        {
          flex: 1,
          values: ['身份证', '台胞证', '港澳通行证'],
          textAlign: 'center'
        }
      ],
      raceslots: [
        {
          flex: 1,
          values: ['汉族', '蒙古族', '回族', '藏族', '维吾尔族', '苗族', '彝族', '壮族', '布依族', '朝鲜族', '满族', '侗族', '瑶族', '白族', '土家族', '哈尼族', '哈萨克族', '傣族', '黎族', '傈僳族', '佤族', '畲族', '高山族', '拉祜族', '水族', '东乡族', '纳西族', '景颇族', '柯尔克孜族', '土族', '达斡尔族', '仫佬族', '羌族', '布朗族', '撒拉族', '毛难族', '仡佬族', '锡伯族', '阿昌族', '普米族', '塔吉克族', '怒族', '乌孜别克族', '俄罗斯族', '鄂温克族', '崩龙族', '保安族', '裕固族', '京族', '塔塔尔族', '独龙族', '鄂伦春族', '赫哲族', '门巴族', '珞巴族', '基诺族'],
          textAlign: 'center'
        }
      ],
      Politicalslots: [
        {
          flex: 1,
          values: ['中共党员', '中共预备党员', '共青团员', '群众', '无党派人士', '九三学社社员', '农工党党员', '台盟盟员', '民建会员', '民盟盟员', '民进会员', '民革会员', '致公党党员'],
          textAlign: 'center'
        }
      ],
      Bloodslots: [
        {
          flex: 1,
          values: ['A型', 'B型', 'AB型', 'O型', '其他', '不详'],
          textAlign: 'center'
        }
      ],
      Religionslots: [
        {
          flex: 1,
          values: ['无宗教信仰', '伊斯兰教', '佛教', '天主教', '基督教', '道教'],
          textAlign: 'center'
        }
      ],
      Marriageslots: [
        {
          flex: 1,
          values: ['已婚', '未婚', '离婚', '丧偶'],
          textAlign: 'center'
        }
      ],
      Accountslots: [
        {
          flex: 1,
          values: ['农业', '非农业', '台湾籍'],
          textAlign: 'center'
        }
      ],
      Wageslots: [
        {
          flex: 1,
          values: ['当月发当月', '次月发上月', '无'],
          textAlign: 'center'
        }
      ],
      Childslots: [
        {
          flex: 1,
          values: ['是', '否'],
          textAlign: 'center'
        }
      ]
    }
  },
  methods: {
    User_Selectsexsk () {
      this.sexVisible = !this.sexVisible
    },
    User_SelectsexSure () {
      this.SexValue = this.SexValue_set
      this.sexVisible = !this.sexVisible
    },
    onValuessexChange (picker, values) {
      this.SexValue_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectIdTypesk () {
      this.IdTypeVisible = !this.IdTypeVisible
    },
    User_SelectIdTypeSure () {
      this.user_IdTypeValue = this.user_IdTypeValue_set
      this.IdTypeVisible = !this.IdTypeVisible
    },
    onValuesIdTypeChange (picker, values) {
      this.user_IdTypeValue_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_Selectracesk () {
      this.raceVisible = !this.raceVisible
    },
    User_SelectraceSure () {
      this.User_Race = this.User_Race_set
      this.raceVisible = !this.raceVisible
    },
    onValuesraceChange (picker, values) {
      this.User_Race_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectPoliticalsk () {
      this.PoliticalVisible = !this.PoliticalVisible
    },
    User_SelectPoliticalSure () {
      this.user_Political = this.user_Political_set
      this.PoliticalVisible = !this.PoliticalVisible
    },
    onValuesPoliticalChange (picker, values) {
      this.user_Political_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectReligionsk () {
      this.ReligionVisible = !this.ReligionVisible
    },
    User_SelectReligionSure () {
      this.user_Religion = this.user_Religion_set
      this.ReligionVisible = !this.ReligionVisible
    },
    onValuesReligionChange (picker, values) {
      this.user_Religion_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectBloodsk () {
      this.BloodVisible = !this.BloodVisible
    },
    User_SelectBloodSure () {
      this.user_Blood = this.user_Blood_set
      this.BloodVisible = !this.BloodVisible
    },
    onValuesBloodChange (picker, values) {
      this.user_Blood_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectMarriagesk () {
      this.MarriageVisible = !this.MarriageVisible
    },
    User_SelectMarriageSure () {
      this.user_Marriage = this.user_Marriage_set
      this.MarriageVisible = !this.MarriageVisible
    },
    onValuesMarriageChange (picker, values) {
      this.user_Marriage_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectAccountsk () {
      this.AccountVisible = !this.AccountVisible
    },
    User_SelectAccountSure () {
      this.user_Account = this.user_Account_set
      this.AccountVisible = !this.AccountVisible
    },
    onValuesAccountChange (picker, values) {
      this.user_Account_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectWagesk () {
      this.WageVisible = !this.WageVisible
    },
    User_SelectWageSure () {
      this.user_Wage = this.user_Wage_set
      this.WageVisible = !this.WageVisible
    },
    onValuesWageChange (picker, values) {
      this.user_Wage_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    User_SelectChildsk () {
      this.ChildVisible = !this.ChildVisible
    },
    User_SelectChildSure () {
      this.user_child = this.user_child_set
      this.ChildVisible = !this.ChildVisible
    },
    onValuesChildChange (picker, values) {
      this.user_child_set = values[0]
      if (values[0] > values[1]) {
        picker.setSlotValue(1, values[0])
      }
    },
    Get_userCountry () {
      this.$router.push({
        path: `/container`
      })
    },
    Get_UserIdTest (e) {
      if (this.user_IdTypeValue !== '身份证') {
        return
      }
      let thisValue = e.currentTarget.value
      let VueThis = this
      this.user.ID = thisValue
      this.user.testID = VueThis.$options.methods.ChinaIdChecker(thisValue)
      // this.user.testID = global_.ChinaIdChecker(thisValue)
      if (this.user.testID) {
        this.$options.methods.User_IdwrtData(VueThis)
      }
    },
    User_IdwrtData (data) {
      data.SexValue = this.USERsexName
      let USER_TIME = this.USERyearStr + '-' + this.USERmonthStr + '-' + this.USERdayStr
      data.user.BornTime = USER_TIME
      data.pickerValue = USER_TIME
    },
    ChinaIdChecker (id) {
      this.isOK = false
      this.error = ''
      if (!id || typeof (id) !== 'string' || id === '111111111111111') {
        this.error = '输入不是15位或者18位有效字符串'
        return false
      }
      if (id.length !== 15 && id.length !== 18) {
        this.error = '输入不是15位或者18位有效字符串'
        return false
      }
      if (!id.match(/^[0-9]{15}$/) && !id.match(/^[0-9]{17}[0-9xX]$/)) {
        this.error = '输入不是15位或者18位有效字符串'
        return false
      }
      let area = {
        '10': '北京',
        '11': '天津',
        '13': '河北',
        '14': '山西',
        '15': '内蒙古',
        '21': '辽宁',
        '22': '吉林',
        '23': '黑龙江',
        '31': '上海',
        '32': '江苏',
        '33': '浙江',
        '34': '安徽',
        '35': '福建',
        '36': '江西',
        '37': '山东',
        '41': '河南',
        '42': '湖北',
        '43': '湖南',
        '44': '广东',
        '45': '广西',
        '46': '海南',
        '50': '重庆',
        '51': '四川',
        '52': '贵州',
        '53': '云南',
        '54': '西藏',
        '61': '陕西',
        '62': '甘肃',
        '63': '青海',
        '64': '宁夏',
        '65': '新疆',
        '71': '台湾',
        '81': '香港',
        '82': '澳门',
        '91': '国外'
      }
      this.areaName = area[id.substr(0, 2)]
      if (!this.areaName) {
        this.error = '前2位不是有效的行政区划代码'
        return false
      }
      if (id.length === 15) {
        this.year = parseInt(id.substr(6, 2))
        this.month = parseInt(id.substr(8, 2))
        this.day = parseInt(id.substr(10, 2))
      } else {
        this.year = parseInt(id.substr(6, 4))
        this.month = parseInt(id.substr(10, 2))
        this.day = parseInt(id.substr(12, 2))
      }
      this.error = '出生日期不正确'
      if (this.month > 12) {
        return false
      }
      if (this.day > 31) {
        return false
      }
      // February can't be greater than 29 (leap year calculation comes later)
      if ((this.month === 2) && (this.day > 29)) {
        return false
      }
      // check for months with only 30 days
      if ((this.month === 4) || (this.month === 6) || (this.month === 9) || (this.month === 11)) {
        if (this.day > 30) {
          return false
        }
      }
      // if 2-digit year, use 50 as a pivot date
      if (this.year < 100) {
        this.year += 1900
      }
      if (this.year > 9999) {
        return false
      }
      // check for leap year if the month and day is Feb 29
      if ((this.month === 2) && (this.day === 29)) {
        var div4 = this.year % 4
        var div100 = this.year % 100
        var div400 = this.year % 400
        // if not divisible by 4, then not a leap year so Feb 29 is invalid
        if (div4 !== 0) {
          return false
        }
        // at this point, year is divisible by 4. So if year is divisible by
        // 100 and not 400, then it's not a leap year so Feb 29 is invalid
        if ((div100 === 0) && (div400 !== 0)) {
          return false
        }
      }
      this.USERyearStr = '' + this.year
      this.USERmonthStr = (this.month < 10 ? '0' : '') + this.month
      this.USERdayStr = (this.day < 10 ? '0' : '') + this.day
      // date is valid
      let birthDay = new Date(this.year, this.month - 1, this.day)
      if (birthDay - new Date() >= 0 || birthDay - new Date(1850, 1, 1) <= 0) {
        return false
      }
      this.error = ''
      let lastNum = id.length === 15 ? id.substr(14, 1) : id.substr(16, 1)
      this.sex = (lastNum === '1' || lastNum === '3' || lastNum === '5' || lastNum === '7' || lastNum === '9') ? '1' : '0'
      this.USERsexName = this.sex === '1' ? '男' : '女'
      if (id.length === 15) {
        this.isOK = true
        return true
      }
      let getLastValidationLetter = function (str) {
        let strArray = new Array(17)
        let Wi = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1]
        let Y = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2']
        let S = 0
        let jym = 0
        for (let i = 16; i >= 0; i -= 1) {
          strArray[i] = Number(str.charAt(i))
        }
        for (let j = 16; j >= 0; j -= 1) {
          S += strArray[j] * Wi[j]
        }
        jym = S % 11
        return Y[jym]
      }
      if (id.substr(17, 1) !== getLastValidationLetter(id.substr(0, 17))) {
        this.error = '18位身份证编码最后一位校验码不正确'
        return false
      }
      this.isOK = true
      return true
    },
    setDate () {
      this.$picker.show({
        type: 'datePicker',
        onOk: (date) => {
          this.user.BornTime = date
        }
      })
    },
    setDate2 () {
      this.$picker.show({
        type: 'datePicker',
        onOk: (e) => {
          this.user.jobsTime = e
        }
      })
    },
    showPicker4 () {
      this.$refs.picker4.show()
    },
    handlePicker4Confirm (v) {
      this.picker4.anchor = v
      this.value = v ? JSON.stringify(v) : null
      // console.log('籍贯id是否正确' + JSON.stringify(this.picker4))
      let objarea = JSON.parse(this.value)
      this.user.HomeTownPlace = objarea[0].value + ' ' + objarea[1].value + ' ' + objarea[2].value
    },
    showBornPicker5 () {
      this.$refs.picker5.show()
    },
    handlePicker5Confirm (v) {
      this.picker5.anchor = v
      this.value = v ? JSON.stringify(v) : null
      let objarea = JSON.parse(this.value)
      this.user.Birthplace = objarea[0].value + ' ' + objarea[1].value + ' ' + objarea[2].value
    },
    showAccountPicker6 () {
      this.$refs.picker6.show()
    },
    handlePicker6Confirm (v) {
      this.picker6.anchor = v
      this.value = v ? JSON.stringify(v) : null
      let objarea = JSON.parse(this.value)
      this.user.Accountplace = objarea[0].value + ' ' + objarea[1].value + ' ' + objarea[2].value
    },
    showFamilyPicker7 () {
      this.$refs.picker7.show()
    },
    handlePicker7Confirm (v) {
      this.picker7.anchor = v
      this.value = v ? JSON.stringify(v) : null
      let objarea = JSON.parse(this.value)
      this.user.FamilyPlace = objarea[0].value + ' ' + objarea[1].value + ' ' + objarea[2].value
    },
    showNowPicker8 () {
      this.$refs.picker8.show()
    },
    handlePicker8Confirm (v) {
      this.picker8.anchor = v
      this.value = v ? JSON.stringify(v) : null
      let objarea = JSON.parse(this.value)
      this.user.NowPlace = objarea[0].value + ' ' + objarea[1].value + ' ' + objarea[2].value
    },
    Get_UserAccount () {
      this.$router.push({
        path: `/account`
      })
    },
    keep_usermsg () {
      const user = this.user
      const reg = global_.AddressReg
      let msgselect = true
      if (user.Name === '') {
        user.NameAcitve = true
        msgselect = false
      } else {
        user.NameAcitve = false
      }
      if (this.user_IdTypeValue === '身份证') {
        if (!user.testID) {
          user.IDAcitve = true
          msgselect = false
        } else {
          user.IDAcitve = false
        }
      }
      if (user.jobsTime < user.BornTime) {
        user.BornTimeAcitve = true
        user.jobsTimeAcitve = true
        msgselect = false
      } else {
        user.BornTimeAcitve = false
        user.jobsTimeAcitve = false
      }
      if (user.Height > 200 || user.Height < 140) {
        user.HeightAcitve = true
        msgselect = false
      } else {
        user.HeightAcitve = false
      }
      if (!reg.test(user.Accountplaceinput)) {
        user.AccountplaceinputAcitve = true
        msgselect = false
      } else {
        user.AccountplaceinputAcitve = false
      }
      if (!reg.test(user.FamilyPlaceinput)) {
        user.FamilyPlaceinputAcitve = true
        msgselect = false
      } else {
        user.FamilyPlaceinputAcitve = false
      }
      if (!reg.test(user.NowPlaceinput)) {
        user.NowPlaceinputAcitve = true
        msgselect = false
      } else {
        user.NowPlaceinputAcitve = false
      }
      if (msgselect) {
        MessageBox('信息正确', '信息保存成功')
      } else {
        MessageBox('提交信息有误', '有误信息已经标红,请修改')
      }
    }
  },
  computed: mapState({
    ContainerName: state => state.ContainerName
  })
}
</script>
<style lang="stylus" scoped>
@import '~@/assets/styles/varibles.styl'
@import '~@/assets/styles/minxs.styl'
.Basic-top
  box-sizing: border-box
  display:flex
  width:100%
  padding-left:.15rem
  .Basic-topbg
   width:.2rem
   height:.5rem
   margin-top:.1rem
   background:rgba(28, 170, 254, 1)
  .Basic-title
    display:flex
    flex:1
    padding-left:.2rem
    height:.8rem
    line-height:.8rem
    text-align:left
    font-size:.35rem
    border-bottom:1px solid transparent
    -moz-border-image:url(../../../assets/img/u236.png) 30 30 round
    -webkit-border-image:url(../../../assets/img/u236.png) 30 30 round
    -o-border-image:url(../../../assets/img/u236.png) 30 30 round
    border-image:url(../../../assets/img/u236.png) 30 30 round
    .Basicmsg
     flex:.95
    .Basic-Up
      margin-top:-0.2rem
      .Basicfont
       font-size:.6rem
       color:rgba(28, 170, 254, 1)
.Basic-ul
  box-sizing:border-box
  width:100%
  padding:.2rem
  .Basic-li
   height:.7rem
   line-height:.7rem
   font-size:.27rem
   display:flex
   .Basicmsg-left
     flex:3
     text-align:right
     color:#797979
   .Basicmsg-container
     box-sizing:border-box
     padding-left:.3rem
     flex:9
     color:#000000
     ellipsis()
     input
      width:100%
     .Basiciconfont-time
       margin-left:.1rem
   .Basicmsgicon-left
     flex:3
     text-align:right
     color:#797979
   .Basicmsgicon-container
     flex:9
     padding-left:.3rem
     color:#000000
   .Basicmsgicon-right
     flex:2
     .BasicIconbg
      font-size:.5rem
      color:pink
.overlayer
    position: fixed
    left: 0
    top: 0
    z-index:10
    width: 100%
    height: 100%
    opacity: 0.5
    background: #000
.Basic_selectsex
    position: fixed
    left: 0
    top: 5rem
    width:100%
    z-index:11
.levelselect
  width:$selectWidth
  .picker-toolbar-title
    display:flex
    flex-direction: row
    justify-content: space-around
    height: 40px
    line-height: 40px
    font-size: 16px
</style>
